
//Order
public function up(): void
{
    Schema::create('orders', function (Blueprint $table) {
        $table->id();
        $table->bigInteger('user_id')->unsigned();
        $table->decimal('subtotal');
        $table->decimal('discount')->default(0);
        $table->decimal('tax');
        $table->decimal('total');
        $table->string('name');
        $table->string('phone');
        //$table->string('locality');
        //$table->text('address');
        //$table->string('city');
        //$table->string('state');
        //$table->string('country');
        //$table->string('landmark')->nullable();
        //$table->string('zip');
        $table->string('type')->default('home');
        $table->enum('status',['ordered','delivered','canceled'])->default('ordered');
        $table->boolean('is_shipping_different')->default(false);
        $table->date('delivered_date')->nullable();
        $table->date('canceled_date')->nullable();
        $table->timestamps();
        $table->foreign('user_id')->references('id')->on('users')->onDelete('cascade');            
    });
}

///order_items

 Schema::create('order_items', function (Blueprint $table) {
        $table->id();
        $table->bigInteger('product_id')->unsigned();
        $table->bigInteger('order_id')->unsigned();
        $table->decimal('price');
        $table->integer('quantity');
        //$table->longText('options')->nullable();
        $table->boolean('rstatus')->default(false);
        $table->timestamps();
        $table->foreign('product_id')->references('id')->on('products')->onDelete('cascade');
        $table->foreign('order_id')->references('id')->on('orders')->onDelete('cascade');
    });

shipping table

Schema::create('shippings', function (Blueprint $table) {
        $table->id();
        $table->bigInteger('user_id')->unsigned();
        $table->string('name');
        $table->string('phone');
        $table->string('locality');
        $table->text('address');
        $table->string('city');
        $table->string('state');
        $table->string('country');
        $table->string('landmark')->nullable();
        $table->string('zip');
        $table->string('type')->default('home');
        $table->timestamps();
        $table->foreign('order_id')->references('id')->on('orders')->onDelete('cascade');
    });


//transactions

Schema::create('transactions', function (Blueprint $table) {
        $table->id();
        $table->bigInteger('user_id')->unsigned();
        $table->bigInteger('order_id')->unsigned();
        $table->enum('mode',['cod','card','paypal']);
        $table->enum('status',['pending','approved','declined','refunded'])->default('pending');
        $table->timestamps();
        $table->foreign('user_id')->references('id')->on('users')->onDelete('cascade');
        $table->foreign('order_id')->references('id')->on('orders')->onDelete('cascade');
    });



//order modal 


    
    public function user()
    {
        return $this->belongsTo(User::class);
    }

    public function orderItems()
    {
        return $this->hasMany(OrderItem::class);
    }

    public function shipping()
    {
        return $this->hasOne(Shipping::class);
    }

    public function transaction()
    {
        return $this->hasOne(Transaction::class);
    }


